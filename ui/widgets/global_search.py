from PyQt6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, QLineEdit, QListWidget, 
                             QListWidgetItem, QLabel, QPushButton, QFrame)
from PyQt6.QtCore import Qt, pyqtSignal, QTimer
from PyQt6.QtGui import QIcon, QPixmap

class SearchItem:
    def __init__(self, title, description, tab_index, action=None, keywords=None):
        self.title = title
        self.description = description
        self.tab_index = tab_index
        self.action = action
        self.keywords = keywords or []
        
    def matches(self, query):
        query = query.lower()
        # –ü–æ–∏—Å–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏, –æ–ø–∏—Å–∞–Ω–∏–∏ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö
        return (query in self.title.lower() or 
                query in self.description.lower() or
                any(query in keyword.lower() for keyword in self.keywords))

class GlobalSearchWidget(QWidget):
    search_activated = pyqtSignal(int, object)  # tab_index, action
    search_closed = pyqtSignal()
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.search_items = []
        self.init_ui()
        self.index_all_items()
        
    def init_ui(self):
        layout = QVBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(0)
        
        # –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
        search_layout = QHBoxLayout()
        search_layout.setContentsMargins(15, 15, 15, 10)
        
        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText("üîç –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º...")
        self.search_input.setFixedHeight(40)
        self.search_input.textChanged.connect(self.perform_search)
        self.search_input.returnPressed.connect(self.execute_first_result)
        self.search_input.setStyleSheet("""
            QLineEdit {
                background-color: #1a1a1a;
                border: 2px solid #3b82f6;
                border-radius: 8px;
                padding: 8px 16px;
                color: #e0e0e0;
                font-size: 14px;
                font-weight: 500;
            }
            QLineEdit:focus {
                border-color: #60a5fa;
                background-color: #262626;
            }
        """)
        search_layout.addWidget(self.search_input)
        
        close_button = QPushButton("‚úï")
        close_button.setFixedSize(40, 40)
        close_button.clicked.connect(self.close_search)
        close_button.setStyleSheet("""
            QPushButton {
                background-color: #2a2a2a;
                border: 1px solid #3a3a3a;
                border-radius: 8px;
                color: #e0e0e0;
                font-size: 16px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #ef4444;
                border-color: #ef4444;
            }
        """)
        search_layout.addWidget(close_button)
        
        layout.addLayout(search_layout)
        
        # –°–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.results_list = QListWidget()
        self.results_list.setMaximumHeight(400)
        self.results_list.itemClicked.connect(self.execute_result)
        self.results_list.setStyleSheet("""
            QListWidget {
                background-color: #141414;
                border: 1px solid #2a2a2a;
                border-radius: 6px;
                margin: 0px 15px 15px 15px;
                outline: none;
            }
            QListWidget::item {
                background-color: transparent;
                border-bottom: 1px solid #1a1a1a;
                padding: 12px;
                min-height: 50px;
            }
            QListWidget::item:hover {
                background-color: #2a2a2a;
            }
            QListWidget::item:selected {
                background-color: #3b82f6;
                color: white;
            }
        """)
        layout.addWidget(self.results_list)
        
        # –ü–æ–¥—Å–∫–∞–∑–∫–∞
        self.hint_label = QLabel("–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π...")
        self.hint_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.hint_label.setStyleSheet("""
            QLabel {
                color: #808080;
                font-size: 13px;
                padding: 20px;
                background-color: #0f0f0f;
                border-radius: 6px;
                margin: 0px 15px 15px 15px;
            }
        """)
        layout.addWidget(self.hint_label)
        
        self.setStyleSheet("""
            QWidget {
                background-color: #0a0a0a;
                border: 2px solid #3b82f6;
                border-radius: 12px;
            }
        """)
        
    def index_all_items(self):
        """–ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫"""
        self.search_items = [
            # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–≤–∫–ª–∞–¥–∫–∞ 0)
            SearchItem("–°–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω", "–í–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å —Å–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω", 0, 
                      keywords=["—Ç–∞—á", "touch", "—ç–∫—Ä–∞–Ω", "–¥–∏—Å–ø–ª–µ–π"]),
            SearchItem("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã", "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä", 0,
                      keywords=["reboot", "restart", "–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"]),
            SearchItem("–û—á–∏—Å—Ç–∫–∞ Temp —Ñ–∞–π–ª–æ–≤", "–û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã", 0,
                      keywords=["temp", "–≤—Ä–µ–º–µ–Ω–Ω—ã–µ", "–æ—á–∏—Å—Ç–∫–∞", "cleanup"]),
            SearchItem("COM –ø–æ—Ä—Ç—ã", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å COM –ø–æ—Ä—Ç—ã", 0,
                      keywords=["com", "–ø–æ—Ä—Ç", "–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π"]),
            SearchItem("–°–ª—É–∂–±—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É–∂–±–∞–º–∏ Windows", 0,
                      keywords=["services", "—Å–ª—É–∂–±–∞", "—Å–µ—Ä–≤–∏—Å"]),
            SearchItem("–ó–∞—â–∏—Ç–∞ Windows", "–û—Ç–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç–Ω–∏–∫ –∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä", 0,
                      keywords=["defender", "–∑–∞—â–∏—Ç–Ω–∏–∫", "–∞–Ω—Ç–∏–≤–∏—Ä—É—Å", "firewall"]),
            SearchItem("–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞", "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏", 0,
                      keywords=["startup", "–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫"]),
            SearchItem("–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", 0,
                      keywords=["control panel", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"]),
            SearchItem("–î–∏—Å–ø–µ—Ç—á–µ—Ä –ø–µ—á–∞—Ç–∏", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É –ø–µ—á–∞—Ç–∏", 0,
                      keywords=["print", "printer", "spooler", "–ø—Ä–∏–Ω—Ç–µ—Ä"]),
            SearchItem("–û—á–µ—Ä–µ–¥—å –ø–µ—á–∞—Ç–∏", "–û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å –ø–µ—á–∞—Ç–∏", 0,
                      keywords=["print queue", "–æ—á–µ—Ä–µ–¥—å"]),
            SearchItem("TLS 1.2", "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª TLS 1.2", 0,
                      keywords=["ssl", "tls", "—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ"]),
            SearchItem("RNDIS", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å RNDIS —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", 0,
                      keywords=["usb", "android", "–æ–±—â–∏–π –¥–æ—Å—Ç—É–ø"]),
                      
            # iiko —Ñ—É–Ω–∫—Ü–∏–∏ (–≤–∫–ª–∞–¥–∫–∞ 1)
            SearchItem("–ó–∞–∫—Ä—ã—Ç—å iikoFront", "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å iikoFront.Net", 1,
                      keywords=["iiko", "—Ñ—Ä–æ–Ω—Ç", "–∑–∞–∫—Ä—ã—Ç—å", "–ø—Ä–æ—Ü–µ—Å—Å"]),
            SearchItem("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å iikoFront", "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ iikoFront.Net", 1,
                      keywords=["iiko", "—Ñ—Ä–æ–Ω—Ç", "restart", "–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"]),
            SearchItem("–û–±–Ω–æ–≤–∏—Ç—å iikoCard", "–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å iikoCard", 1,
                      keywords=["iiko", "–∫–∞—Ä—Ç–∞", "card", "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"]),
                      
            # –õ–æ–≥–∏ (–≤–∫–ª–∞–¥–∫–∞ 2)
            SearchItem("Config.xml", "–û—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª", 2,
                      keywords=["config", "–∫–æ–Ω—Ñ–∏–≥", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "xml"]),
            SearchItem("Cash-server –ª–æ–≥", "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–∞—Å—Å–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞", 2,
                      keywords=["cash", "–∫–∞—Å—Å–∞", "—Å–µ—Ä–≤–µ—Ä", "–ª–æ–≥"]),
            SearchItem("OnlineMarking –ª–æ–≥", "–õ–æ–≥–∏ –æ–Ω–ª–∞–π–Ω –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏", 2,
                      keywords=["marking", "–º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞", "—á–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫"]),
            SearchItem("DualConnector –ª–æ–≥", "–õ–æ–≥–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞", 2,
                      keywords=["dual", "connector", "payment", "–ø–ª–∞—Ç–µ–∂"]),
            SearchItem("SberbankPlugin –ª–æ–≥", "–õ–æ–≥–∏ –ø–ª–∞–≥–∏–Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞", 2,
                      keywords=["sberbank", "—Å–±–µ—Ä–±–∞–Ω–∫", "plugin"]),
            SearchItem("VirtualPrinter –ª–æ–≥", "–õ–æ–≥–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–Ω—Ç–µ—Ä–∞", 2,
                      keywords=["virtual", "printer", "–ø—Ä–∏–Ω—Ç–µ—Ä"]),
            SearchItem("Error –ª–æ–≥", "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫", 2,
                      keywords=["error", "–æ—à–∏–±–∫–∞", "err"]),
            SearchItem("Transport –ª–æ–≥", "–õ–æ–≥–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ API", 2,
                      keywords=["transport", "api", "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"]),
            SearchItem("–°–æ–±—Ä–∞—Ç—å –ª–æ–≥–∏", "–°–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ —Å –ª–æ–≥–∞–º–∏", 2,
                      keywords=["collect", "archive", "–∞—Ä—Ö–∏–≤", "—Å–±–æ—Ä"]),
                      
            # –ü–∞–ø–∫–∏ (–≤–∫–ª–∞–¥–∫–∞ 3)
            SearchItem("EntitiesStorage", "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É EntitiesStorage", 3,
                      keywords=["entities", "storage", "—Å—É—â–Ω–æ—Å—Ç–∏"]),
            SearchItem("PluginConfig", "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤", 3,
                      keywords=["plugin", "config", "–ø–ª–∞–≥–∏–Ω"]),
            SearchItem("Logs –ø–∞–ø–∫–∞", "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É —Å –ª–æ–≥–∞–º–∏", 3,
                      keywords=["logs", "–ø–∞–ø–∫–∞", "–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è"]),
                      
            # –°–µ—Ç—å (–≤–∫–ª–∞–¥–∫–∞ 4)
            SearchItem("IP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", 4,
                      keywords=["ip", "ipconfig", "—Å–µ—Ç—å", "network"]),
                      
            # –ü—Ä–æ–≥—Ä–∞–º–º—ã (–≤–∫–ª–∞–¥–∫–∞ 5)
            SearchItem("7-Zip", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä 7-Zip", 5,
                      keywords=["–∞—Ä—Ö–∏–≤", "zip", "rar", "–∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä"]),
            SearchItem("Advanced IP Scanner", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫–∞–Ω–µ—Ä IP –∞–¥—Ä–µ—Å–æ–≤", 5,
                      keywords=["scanner", "—Å–∫–∞–Ω–µ—Ä", "ip", "—Å–µ—Ç—å"]),
            SearchItem("AnyDesk", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞", 5,
                      keywords=["remote", "—É–¥–∞–ª–µ–Ω–Ω—ã–π", "–¥–æ—Å—Ç—É–ø"]),
            SearchItem("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", 5,
                      keywords=["assistant", "–ø–æ–º–æ—â–Ω–∏–∫"]),
            SearchItem("Com Port Checker", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É COM –ø–æ—Ä—Ç–æ–≤", 5,
                      keywords=["com", "port", "checker", "–ø–æ—Ä—Ç"]),
            SearchItem("Database Net", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö", 5,
                      keywords=["database", "db", "–±–∞–∑–∞", "–¥–∞–Ω–Ω—ã–µ"]),
            SearchItem("Notepad++", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä", 5,
                      keywords=["notepad", "editor", "—Ä–µ–¥–∞–∫—Ç–æ—Ä", "—Ç–µ–∫—Å—Ç"]),
            SearchItem("Printer TEST", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–µ—Ä –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤", 5,
                      keywords=["printer", "test", "–ø—Ä–∏–Ω—Ç–µ—Ä", "—Ç–µ—Å—Ç"]),
            SearchItem("Rhelper", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–º–æ—â–Ω–∏–∫ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞", 5,
                      keywords=["rhelper", "remote", "helper"])
        ]
        
    def perform_search(self):
        query = self.search_input.text().strip()
        
        if not query:
            self.results_list.clear()
            self.hint_label.setText("–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π...")
            self.hint_label.show()
            self.results_list.hide()
            return
            
        self.hint_label.hide()
        self.results_list.show()
        self.results_list.clear()
        
        # –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        matches = []
        for item in self.search_items:
            if item.matches(query):
                matches.append(item)
                
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
        matches.sort(key=lambda x: (
            x.title.lower().startswith(query.lower()),  # –¢–æ—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ –Ω–∞–∑–≤–∞–Ω–∏—è
            query.lower() in x.title.lower(),            # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
            query.lower() in x.description.lower()       # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
        ), reverse=True)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        for item in matches[:10]:  # –ú–∞–∫—Å–∏–º—É–º 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            list_item = QListWidgetItem()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏
            tab_names = ["–°–∏—Å—Ç–µ–º–∞", "iiko", "–õ–æ–≥–∏", "–ü–∞–ø–∫–∏", "–°–µ—Ç—å", "–ü—Ä–æ–≥—Ä–∞–º–º—ã"]
            tab_name = tab_names[item.tab_index] if item.tab_index < len(tab_names) else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            text = f"üîß {item.title}\nüí≠ {item.description}\nüìÅ –í–∫–ª–∞–¥–∫–∞: {tab_name}"
            list_item.setText(text)
            list_item.setData(Qt.ItemDataRole.UserRole, item)
            
            self.results_list.addItem(list_item)
            
        if not matches:
            no_results = QListWidgetItem("üîç –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            no_results.setFlags(Qt.ItemFlag.NoItemFlags)
            self.results_list.addItem(no_results)
            
    def execute_first_result(self):
        """–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter"""
        if self.results_list.count() > 0:
            first_item = self.results_list.item(0)
            if first_item:
                self.execute_result(first_item)
                
    def execute_result(self, item):
        """–í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
        search_item = item.data(Qt.ItemDataRole.UserRole)
        if search_item:
            self.search_activated.emit(search_item.tab_index, search_item.action)
            self.close_search()
            
    def close_search(self):
        """–ó–∞–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫"""
        self.search_closed.emit()
        
    def focus_search(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞"""
        self.search_input.setFocus()
        self.search_input.selectAll()
        
    def clear_search(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"""
        self.search_input.clear()
        self.results_list.clear()
        self.hint_label.show()
        self.results_list.hide()