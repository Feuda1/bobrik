import os
import sys
import subprocess

def is_first_run():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–µ—Ä–≤—ã–π –ª–∏ —ç—Ç–æ –∑–∞–ø—É—Å–∫"""
    config_dir = os.path.join(os.getenv('APPDATA'), 'bobrik')
    config_file = os.path.join(config_dir, 'startup_added.txt')
    return not os.path.exists(config_file)

def mark_startup_added():
    """–û—Ç–º–µ—á–∞–µ—Ç, —á—Ç–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –±—ã–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"""
    config_dir = os.path.join(os.getenv('APPDATA'), 'bobrik')
    try:
        os.makedirs(config_dir, exist_ok=True)
        with open(os.path.join(config_dir, 'startup_added.txt'), 'w') as f:
            f.write('startup_configured')
        return True
    except:
        return False

def add_to_startup():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤ —Ä–µ–µ—Å—Ç—Ä –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏"""
    try:
        if sys.platform != "win32":
            return False
            
        exe_path = sys.executable if getattr(sys, 'frozen', False) else os.path.abspath(__file__)
        
        print(f"–î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É: {exe_path}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–µ—Å—Ç—Ä
        cmd = [
            'reg', 'add', 
            r'HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run',
            '/v', 'bobrik', 
            '/t', 'REG_SZ', 
            '/d', f'"{exe_path}"', 
            '/f'
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ä–µ–µ—Å—Ç—Ä –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–µ—Å—Ç—Ä: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É: {e}")
        return False

def check_startup_exists():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–µ"""
    try:
        result = subprocess.run([
            'reg', 'query', 
            r'HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run',
            '/v', 'bobrik'
        ], capture_output=True, text=True)
        
        return result.returncode == 0
    except:
        return False

def setup_startup_if_first_run():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ"""
    try:
        print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏...")
        
        if is_first_run():
            print("üéâ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É")
            
            if add_to_startup():
                mark_startup_added()
                print("‚úÖ bobrik –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞")
            else:
                mark_startup_added()  # –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ–±—ã –Ω–µ –ø—ã—Ç–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É")
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –º–µ—Å—Ç–µ
            if check_startup_exists():
                print("‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
            else:
                print("‚ö†Ô∏è –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º")
                add_to_startup()
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")

# –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    setup_startup_if_first_run()